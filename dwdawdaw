    ---- –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
local library = loadstring(game:HttpGet('https://raw.githubusercontent.com/Kompotas/ActualLirp/refs/heads/main/Libary'))()

-- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
local window = library.new('ArmoriHub.Paid', 'CfgPath')
local shotgunTab = window.new_tab('http://www.roblox.com/asset/?id=15178561786')
local otherTab = window.new_tab('http://www.roblox.com/asset/?id=13321848320')
local pisun = window.new_tab('http://www.roblox.com/asset/?id=7347408509')
local section = otherTab.new_section('Visual')
local worldColorSector = section.new_sector('World Color', 'Left')
local cameraSector = section.new_sector('Visual', 'Right')
local tracerSector = section.new_sector('Tracers', 'Left')

-- üî´ Shotgun Tab Settings
local antiAimSection = pisun.new_section('AntiAim|Fov Camera')
local aaSectorSettings2 = antiAimSection.new_sector('Sound|World', 'Right')
local aaSectorBasic = antiAimSection.new_sector('Player', ' Right')
local aaSectorSettings = antiAimSection.new_sector('Settings', 'Righ')
local shotgunSection = shotgunTab.new_section('Main')
local sector1 = shotgunSection.new_sector('Silent', 'Left')
local aimbotSector = shotgunSection.new_sector('Aimbot', 'Right')

local silentAimEnabled = false
local editedPlayers = {}

-- –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
local Players = game:GetService("Players")
local plr = Players.LocalPlayer

-- –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —É –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
local function resetAllChanges()
    for playerName, partsData in pairs(editedPlayers) do
        local player = Players:FindFirstChild(playerName)
        if player and player.Character then
            for partName, originalData in pairs(partsData) do
                local part = player.Character:FindFirstChild(partName)
                if part then
                    part.Size = originalData.Size
                    part.Transparency = originalData.Transparency
                    part.CanCollide = originalData.CanCollide
                end
            end
        end
    end
    editedPlayers = {}
end

-- Toggle –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
local silentAimToggle = sector1.element('Toggle', 'Silent Aim', false, function(v)
    silentAimEnabled = v.Toggle
    print("Silent Aim:", silentAimEnabled)

    if not silentAimEnabled then
        resetAllChanges()
    end
end)

-- –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–∞—Å—Ç–µ–π
local function editPart(player, partName, newSize)
    local part = player.Character and player.Character:FindFirstChild(partName)
    if part then
        editedPlayers[player.Name] = editedPlayers[player.Name] or {}
        if not editedPlayers[player.Name][partName] then
            editedPlayers[player.Name][partName] = {
                Size = part.Size,
                Transparency = part.Transparency,
                CanCollide = part.CanCollide
            }
        end

        part.CanCollide = false
        part.Transparency = 1 -- 10 –±—É–¥–µ—Ç –Ω–µ –≤–∏–¥–Ω–æ, –ª—É—á—à–µ 1
        part.Size = newSize
    end
end

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–≥—Ä–æ–∫–æ–≤
coroutine.wrap(function()
    while true do
        wait(1)
        if silentAimEnabled then
            for _, v in pairs(Players:GetPlayers()) do
                if v ~= plr and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 then
                    editPart(v, "RightUpperLeg", Vector3.new(13,13,13))
                    editPart(v, "LeftUpperLeg", Vector3.new(13,13,13))
                    editPart(v, "HeadHB", Vector3.new(20,20,20))
                    editPart(v, "HumanoidRootPart", Vector3.new(13,13,13))
                elseif editedPlayers[v.Name] then
                    -- –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –º—ë—Ä—Ç–≤ –∏–ª–∏ –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ —á–∞—Å—Ç–∏
                    for partName, originalData in pairs(editedPlayers[v.Name]) do
                        local part = v.Character and v.Character:FindFirstChild(partName)
                        if part then
                            part.Size = originalData.Size
                            part.Transparency = originalData.Transparency
                            part.CanCollide = originalData.CanCollide
                        end
                    end
                    editedPlayers[v.Name] = nil
                end
            end
        else
            resetAllChanges()
        end
    end
end)()

-- –°–ª–µ–∂–µ–Ω–∏–µ –∑–∞ —Å–º–µ—Ä—Ç—å—é –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ ‚Äî —á—Ç–æ–±—ã –Ω–µ –≤—ã–∫–ª—é—á–∞—Ç—å Silent Aim
local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        -- –ü—Ä–∏ —Å–º–µ—Ä—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ Silent Aim –Ω–µ –≤—ã–∫–ª—é—á–∞–µ–º, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        print("You died, but Silent Aim stays ON")
    end)
end

plr.CharacterAdded:Connect(onCharacterAdded)
if plr.Character then
    onCharacterAdded(plr.Character)
end



local silentAimToggle = sector1.element('Toggle', 'MagicBulet', false, function(v)

end)


-- FOV CIRCLE
local fovEnabled = false
local fovSize = 100
local fovCircle = Drawing.new("Circle")
local fovColor = Color3.fromRGB(255, 255, 255)

local lineToTarget = Drawing.new("Line")
lineToTarget.Visible = false
lineToTarget.Color = fovColor

local fovToggle = sector1.element('Toggle', 'Enable FOV', false, function(v)
    fovEnabled = v.Toggle
    fovCircle.Visible = fovEnabled
    lineToTarget.Visible = false
end)

fovToggle:add_color({Color = fovColor}, nil, function(v)
    fovColor = v.Color
    fovCircle.Color = fovColor
    lineToTarget.Color = fovColor
end)

local fovSlider = sector1.element('Slider', 'FOV Size', {
    default = {min = 10, max = 300, default = fovSize}
}, function(v)
    fovSize = v.Slider
    fovCircle.Radius = fovSize
end)

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

RunService.RenderStepped:Connect(function()
    if fovEnabled and fovCircle then
        local mousePos = UserInputService:GetMouseLocation()
        local centerPos = Vector2.new(mousePos.X, mousePos.Y)
        fovCircle.Position = centerPos
        fovCircle.Radius = fovSize

        local camera = Workspace.CurrentCamera
        local closestPlayer = nil
        local closestDistance = math.huge

        for _, player in pairs(Players:GetPlayers()) do
            if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local rootPart = player.Character.HumanoidRootPart
                local rootPos3D = rootPart.Position

                -- –ü—Ä–æ–µ–∫—Ü–∏—è 3D –≤ 2D
                local rootPos2D, onScreen = camera:WorldToViewportPoint(rootPos3D)
                if onScreen then
                    local rootPosVector2 = Vector2.new(rootPos2D.X, rootPos2D.Y)
                    local dist = (rootPosVector2 - centerPos).Magnitude

                    if dist <= fovSize and dist < closestDistance then
                        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä—è–º–æ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏ (Raycast)
                        local rayOrigin = camera.CFrame.Position
                        local rayDirection = (rootPos3D - rayOrigin)

                        local raycastParams = RaycastParams.new()
                        raycastParams.FilterDescendantsInstances = {localPlayer.Character}
                        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                        raycastParams.IgnoreWater = true

                        local raycastResult = Workspace:Raycast(rayOrigin, rayDirection, raycastParams)

                        if raycastResult then
                            -- –ï—Å–ª–∏ –ª—É—á –ø–æ–ø–∞–ª –≤ –æ–±—ä–µ–∫—Ç
                            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—ä–µ–∫—Ç - —ç—Ç–æ HumanoidRootPart –∏–≥—Ä–æ–∫–∞, –∏–Ω–∞—á–µ –ø—Ä–µ–≥—Ä–∞–¥–∞
                            if raycastResult.Instance:IsDescendantOf(player.Character) then
                                closestDistance = dist
                                closestPlayer = rootPosVector2
                            end
                        else
                            -- –ï—Å–ª–∏ –ª—É—á –Ω–µ —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è –Ω–∏ —Å —á–µ–º - —Å—á–∏—Ç–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ–π
                            closestDistance = dist
                            closestPlayer = rootPosVector2
                        end
                    end
                end
            end
        end

        if closestPlayer then
            lineToTarget.From = centerPos
            lineToTarget.To = closestPlayer
            lineToTarget.Visible = true
        else
            lineToTarget.Visible = false
        end
    else
        lineToTarget.Visible = false
    end
end)




-- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
local BEAM_TEXTURE = "rbxassetid://6060542021"
local BEAM_LIFETIME = 3
local BEAM_BASE_WIDTH = 0.35
local SHOOT_INTERVAL = 0.05 -- –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Ç—Ä–∞—Å—Å–∞–º–∏ –ø—Ä–∏ –∑–∞–∂–∞—Ç–∏–∏ (—Å–µ–∫)

-- –°–µ—Ä–≤–∏—Å—ã
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
local tracerEnabled = false
local tracerColor = Color3.fromRGB(255, 255, 255) -- —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ü–≤–µ—Ç –Ω–µ–æ–Ω–∞
local shooting = false -- —Ñ–ª–∞–≥, –∑–∞–∂–∞—Ç–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞

-- UI-—Ç–æ–≥–≥–ª (–ø—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π UI)
local tracerToggle = tracerSector.element('Toggle', 'Enable Tracers', false, function(v)
    tracerEnabled = v.Toggle
    print("Tracers enabled:", tracerEnabled)
end)

tracerToggle:add_color({Color = tracerColor}, nil, function(v)
    tracerColor = v.Color
    print("Tracer color changed:", tracerColor)
end)

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ª—É—á–∞
local function createBeam()
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    -- –ü–æ–∑–∏—Ü–∏—è –Ω–∞—á–∞–ª–∞ ‚Äî HumanoidRootPart
    local startPos = hrp.Position
    -- –ü–æ–∑–∏—Ü–∏—è –∫–æ–Ω—Ü–∞ ‚Äî —Ç–∞–º, –∫—É–¥–∞ —Å–º–æ—Ç—Ä–∏—Ç –º—ã—à—å (–ø–æ –∫–∞—Å–∞–Ω–∏—é)
    local endPos = mouse.Hit.Position
    if not endPos then return end

    local part0 = Instance.new("Part")
    part0.Anchored = true
    part0.CanCollide = false
    part0.Transparency = 1
    part0.Size = Vector3.new(0.1, 0.1, 0.1)
    part0.CFrame = CFrame.new(startPos)
    part0.Parent = workspace

    local part1 = Instance.new("Part")
    part1.Anchored = true
    part1.CanCollide = false
    part1.Transparency = 1
    part1.Size = Vector3.new(0.1, 0.1, 0.1)
    part1.CFrame = CFrame.new(endPos)
    part1.Parent = workspace

    local att0 = Instance.new("Attachment", part0)
    local att1 = Instance.new("Attachment", part1)

    local beam = Instance.new("Beam")
    beam.Attachment0 = att0
    beam.Attachment1 = att1
    beam.Texture = BEAM_TEXTURE
    beam.TextureLength = 1
    beam.TextureMode = Enum.TextureMode.Stretch
    beam.FaceCamera = true

    beam.Color = ColorSequence.new(tracerColor)
    beam.LightEmission = 1
    beam.LightInfluence = 0
    beam.Transparency = NumberSequence.new(0.1)

    beam.Width0 = BEAM_BASE_WIDTH * 2
    beam.Width1 = BEAM_BASE_WIDTH * 2

    beam.Parent = part0

    local pulseTime = 0.2
    local elapsed = 0

    local pulseConnection
    pulseConnection = RunService.RenderStepped:Connect(function(dt)
        elapsed = elapsed + dt
        local pulse = 0.15 * math.sin((elapsed / pulseTime) * math.pi * 2)
        beam.Width0 = (BEAM_BASE_WIDTH * 2) + pulse
        beam.Width1 = (BEAM_BASE_WIDTH * 2) + pulse
    end)

    task.delay(BEAM_LIFETIME, function()
        pulseConnection:Disconnect()
        part0:Destroy()
        part1:Destroy()
    end)
end

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∂–∞—Ç–∏—è –∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –õ–ö–ú
mouse.Button1Down:Connect(function()
    if not tracerEnabled then return end
    shooting = true

    spawn(function()
        while shooting do
            createBeam()
            task.wait(SHOOT_INTERVAL)
        end
    end)
end)

mouse.Button1Up:Connect(function()
    shooting = false
end)





local worldColorEnabled = false
local worldColor = Color3.fromRGB(255, 255, 255)

local function applyWorldColor()
    local lighting = game:GetService("Lighting")

    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∏–ª—å—Ç—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å
    for _, obj in pairs(lighting:GetChildren()) do
        if obj:IsA("ColorCorrectionEffect") and obj.Name == "WorldTint" then
            obj:Destroy()
        end
    end

    -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –Ω–∞–ø—Ä—è–º—É—é
    lighting.Ambient = worldColor
    lighting.OutdoorAmbient = worldColor
    lighting.FogColor = worldColor

    -- –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º ColorCorrection
    if worldColorEnabled then
        local cc = Instance.new("ColorCorrectionEffect")
        cc.Name = "WorldTint"
        cc.TintColor = worldColor
        cc.Saturation = 1
        cc.Contrast = 0.5
        cc.Parent = lighting
    end
end


-- –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
local worldColorToggle = worldColorSector.element('Toggle', 'World Colorr', false, function(v)
    worldColorEnabled = v.Toggle

    -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —ç—Ñ—Ñ–µ–∫—Ç, –Ω–æ –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–≤–µ—Ç
    applyWorldColor()
end)

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞
worldColorToggle:add_color({Color = worldColor}, nil, function(v)
    worldColor = v.Color

    -- –û–±–Ω–æ–≤–∏–º —Ü–≤–µ—Ç (–≤–∫–ª—é—á—ë–Ω –ª–∏ —ç—Ñ—Ñ–µ–∫—Ç –∏–ª–∏ –Ω–µ—Ç ‚Äî –Ω–µ –≤–∞–∂–Ω–æ)
    applyWorldColor()
end)









local espEnabled = false -- —Ñ–ª–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ





-- settings
local settings = {
   defaultcolor = Color3.fromRGB(255,0,0),
   teamcheck = false,
   teamcolor = true
};

-- services
local runService = game:GetService("RunService");
local players = game:GetService("Players");

-- variables
local localPlayer = players.LocalPlayer;
local camera = workspace.CurrentCamera;

local espEnabled = false -- –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ESP –≤—ã–∫–ª

-- functions
local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new;
local tan, rad = math.tan, math.rad;
local round = function(...) local a = {}; for i,v in next, table.pack(...) do a[i] = math.round(v); end return unpack(a); end;
local wtvp = function(...) local a, b = camera:WorldToViewportPoint(...) return newVector2(a.X, a.Y), b, a.Z end;

local espCache = {};
local function createEsp(player)
   local drawings = {};
   
   -- –∫–æ—Ä–æ–±–∫–∞
   drawings.box = newDrawing("Square");
   drawings.box.Thickness = 1;
   drawings.box.Filled = false;
   drawings.box.Color = settings.defaultcolor;
   drawings.box.Visible = false;
   drawings.box.ZIndex = 2;

   -- –∫–æ–Ω—Ç—É—Ä –∫–æ—Ä–æ–±–∫–∏
   drawings.boxoutline = newDrawing("Square");
   drawings.boxoutline.Thickness = 3;
   drawings.boxoutline.Filled = false;
   drawings.boxoutline.Color = newColor3();
   drawings.boxoutline.Visible = false;
   drawings.boxoutline.ZIndex = 1;

   -- –ø–æ–ª–æ—Å–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è (HP)
   drawings.healthBar = newDrawing("Square");
   drawings.healthBar.Filled = true;
   drawings.healthBar.Thickness = 1;
   drawings.healthBar.Color = Color3.fromRGB(0,255,0);
   drawings.healthBar.Transparency = 0.7;
   drawings.healthBar.Visible = false;
   drawings.healthBar.ZIndex = 3;

   -- —Ü–∏—Ñ—Ä—ã HP (—Ç–µ–∫—Å—Ç)
   drawings.healthText = newDrawing("Text");
   drawings.healthText.Center = true;
   drawings.healthText.Outline = true;
   drawings.healthText.Color = Color3.fromRGB(255,255,255);
   drawings.healthText.Size = 14;
   drawings.healthText.Visible = false;
   drawings.healthText.ZIndex = 4;

   espCache[player] = drawings;
end

local function removeEsp(player)
   if rawget(espCache, player) then
       for _, drawing in next, espCache[player] do
           drawing:Remove();
       end
       espCache[player] = nil;
   end
end

local function setEspVisibility(state)
   for _, drawings in pairs(espCache) do
       drawings.box.Visible = state and drawings.box.Visible
       drawings.boxoutline.Visible = state and drawings.boxoutline.Visible
       drawings.healthBar.Visible = state and drawings.healthBar.Visible
       drawings.healthText.Visible = state and drawings.healthText.Visible
   end
end

local function updateEsp(player, esp)
   if not espEnabled then
       -- ESP –≤—ã–∫–ª—é—á–µ–Ω, —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å—ë
       esp.box.Visible = false
       esp.boxoutline.Visible = false
       esp.healthBar.Visible = false
       esp.healthText.Visible = false
       return
   end

   local character = player and player.Character;
   local humanoid = character and character:FindFirstChildOfClass("Humanoid");
   if character and humanoid and humanoid.Health > 0 then
       local cframe = character:GetModelCFrame();
       local position, visible, depth = wtvp(cframe.Position);
       esp.box.Visible = visible;
       esp.boxoutline.Visible = visible;
       esp.healthBar.Visible = visible;
       esp.healthText.Visible = visible;

       if cframe and visible then
           local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000;
           local width, height = round(4 * scaleFactor, 5 * scaleFactor);
           local x, y = round(position.X, position.Y);

           -- –∫–æ—Ä–æ–±–∫–∞
           esp.box.Size = newVector2(width, height);
           esp.box.Position = newVector2(round(x - width / 2, y - height / 2));
           esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor;

           esp.boxoutline.Size = esp.box.Size;
           esp.boxoutline.Position = esp.box.Position;

           -- –ø–æ–ª–æ—Å–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–ª–µ–≤–∞ –æ—Ç –∫–æ—Ä–æ–±–∫–∏, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è
           local hpRatio = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1);
           local barHeight = height;
           local barWidth = 4;
           esp.healthBar.Size = newVector2(barWidth, barHeight * hpRatio);
           esp.healthBar.Position = newVector2(esp.box.Position.X - barWidth - 2, esp.box.Position.Y + (barHeight * (1 - hpRatio)));

           -- —Ü–≤–µ—Ç –ø–æ–ª–æ—Å–∫–∏ –æ—Ç –∑–µ–ª—ë–Ω–æ–≥–æ (–∑–¥–æ—Ä–æ–≤) –∫ –∫—Ä–∞—Å–Ω–æ–º—É (–º–∞–ª–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ)
           esp.healthBar.Color = Color3.fromRGB(
               math.floor(255 * (1 - hpRatio)),
               math.floor(255 * hpRatio),
               0
           );

           -- —Ç–µ–∫—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è –ø–æ–¥ –∫–æ—Ä–æ–±–∫–æ–π –ø–æ —Ü–µ–Ω—Ç—Ä—É
           esp.healthText.Text = tostring(math.floor(humanoid.Health)) .. " HP";
           esp.healthText.Position = newVector2(x, esp.box.Position.Y + height + 4);
       end
   else
       esp.box.Visible = false;
       esp.boxoutline.Visible = false;
       esp.healthBar.Visible = false;
       esp.healthText.Visible = false;
   end
end

-- main
for _, player in next, players:GetPlayers() do
   if player ~= localPlayer then
       createEsp(player);
   end
end

players.PlayerAdded:Connect(function(player)
   createEsp(player);
end);

players.PlayerRemoving:Connect(function(player)
   removeEsp(player);
end)

-- –¢–≤–æ–π toggle –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è ESP
local espToggle = cameraSector.element('Toggle', 'EspBox|HP|hpvalue', false, function(v)
    espEnabled = v.Toggle
    if not espEnabled then
        setEspVisibility(false) -- –°–∫—Ä—ã—Ç—å –≤—Å—ë –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏
    end
end)

runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
   if not espEnabled then return end

   for player, drawings in next, espCache do
       if settings.teamcheck and player.Team == localPlayer.Team then
           continue;
       end

       if drawings and player ~= localPlayer then
           updateEsp(player, drawings);
       end
   end
end)



local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local lp = Players.LocalPlayer

local connections = {}
local Storage

local function ensureStorage()
    Storage = CoreGui:FindFirstChild("Highlight_Storage")
    if not Storage then
        Storage = Instance.new("Folder")
        Storage.Name = "Highlight_Storage"
        Storage.Parent = CoreGui
    end
end

local chamsEnabled = false
local chamsColor = Color3.fromRGB(255, 255, 255)

local DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
local FillTransparency = 0.5
local OutlineColor = Color3.fromRGB(255, 255, 255)
local OutlineTransparency = 0

local function Highlight(plr)
    if plr == lp then return end
    if not Storage then return end
    if Storage:FindFirstChild(plr.Name) then return end

    local highlight = Instance.new("Highlight")
    highlight.Name = plr.Name
    highlight.FillColor = chamsColor
    highlight.DepthMode = DepthMode
    highlight.FillTransparency = FillTransparency
    highlight.OutlineColor = OutlineColor
    highlight.OutlineTransparency = OutlineTransparency
    highlight.Parent = Storage

    local function updateAdornee(char)
        if char and char.Parent then
            highlight.Adornee = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChildWhichIsA("BasePart") or char
        else
            highlight.Adornee = nil
        end
    end

    if plr.Character then
        updateAdornee(plr.Character)
    end

    -- –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–º–µ–Ω—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    connections[plr] = plr.CharacterAdded:Connect(function(char)
        -- –ü–æ–¥–æ–∂–¥—ë–º –ø–æ–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
        char:WaitForChild("HumanoidRootPart", 5)
        updateAdornee(char)
    end)
end

local function RemoveHighlight(plr)
    if Storage and Storage:FindFirstChild(plr.Name) then
        Storage[plr.Name]:Destroy()
    end
    if connections[plr] then
        connections[plr]:Disconnect()
        connections[plr] = nil
    end
end

local function EnableChams()
    ensureStorage()
    for _, plr in pairs(Players:GetPlayers()) do
        Highlight(plr)
    end
end

local function DisableChams()
    if Storage then
        for _, obj in pairs(Storage:GetChildren()) do
            obj:Destroy()
        end
    end
    for plr, conn in pairs(connections) do
        conn:Disconnect()
    end
    connections = {}
end

local function updateChamsColor(newColor)
    chamsColor = newColor
    if Storage then
        for _, highlight in pairs(Storage:GetChildren()) do
            highlight.FillColor = chamsColor
        end
    end
end

-- –ü–æ–¥–∫–ª—é—á–∞–µ–º UI —ç–ª–µ–º–µ–Ω—Ç—ã
local chamsToggle = cameraSector.element('Toggle', 'Chams', false, function(v)
    chamsEnabled = v.Toggle
    if chamsEnabled then
        EnableChams()
    else
        DisableChams()
    end
end)

chamsToggle:add_color({Color = chamsColor}, nil, function(v)
    updateChamsColor(v.Color)
end)

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º / —É–¥–∞–ª—è–µ–º –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ/–≤—ã—Ö–æ–¥–µ –∏–≥—Ä–æ–∫–æ–≤
Players.PlayerAdded:Connect(function(plr)
    if chamsEnabled then
        Highlight(plr)
    end
end)

Players.PlayerRemoving:Connect(function(plr)
    RemoveHighlight(plr)
end)

-- –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ –≤ –∏–≥—Ä–µ, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥—Å–≤–µ—Ç–∏—Ç—å –∏—Ö —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É (–∑–∞—â–∏—Ç–∞ –æ—Ç —Å–∫—Ä—ã—Ç—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π)
RunService.Heartbeat:Connect(function()
    if chamsEnabled and Storage then
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= lp and not Storage:FindFirstChild(plr.Name) and plr.Character then
                Highlight(plr)
            end
        end
    end
end)




local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local camera = workspace.CurrentCamera

local localPlayer = Players.LocalPlayer
local Drawing = Drawing

local tracerEnabled = false -- –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç—Ä–∞—Å—Å—ã
local lineColor = Color3.new(1, 1, 1) -- –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –±–µ–ª—ã–π —Ü–≤–µ—Ç

local lines = {}

local function getMousePos2D()
    local mousePos = UserInputService:GetMouseLocation()
    return Vector2.new(mousePos.X, mousePos.Y)
end

local function getPlayerScreenPos(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = player.Character.HumanoidRootPart
        local screenPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)
        if onScreen then
            return Vector2.new(screenPos.X, screenPos.Y)
        end
    end
    return nil
end

local function createLineForPlayer(player)
    local line = Drawing.new("Line")
    line.Color = lineColor
    line.Thickness = 2
    line.Transparency = 1
    line.Visible = false
    lines[player] = line
end

local function removeLineForPlayer(player)
    if lines[player] then
        lines[player]:Remove()
        lines[player] = nil
    end
end

for _, player in pairs(Players:GetPlayers()) do
    if player ~= localPlayer then
        createLineForPlayer(player)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= localPlayer then
        createLineForPlayer(player)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    removeLineForPlayer(player)
end)

local tracerToPlayerToggle = cameraSector.element('Toggle', 'Tracer to Player', false, function(v)
    tracerEnabled = v.Toggle
    if not tracerEnabled then
        for _, line in pairs(lines) do
            line.Visible = false
        end
    end
end)

tracerToPlayerToggle:add_color({Color = lineColor}, nil, function(v)
    lineColor = v.Color
    for _, line in pairs(lines) do
        line.Color = lineColor
    end
end)

RunService:BindToRenderStep("DrawLinesToPlayers", Enum.RenderPriority.Camera.Value, function()
    if not tracerEnabled then return end

    local mousePos = getMousePos2D()

    for player, line in pairs(lines) do
        local screenPos = getPlayerScreenPos(player)
        if screenPos then
            line.From = mousePos
            line.To = screenPos
            line.Visible = true
        else
            line.Visible = false
        end
    end
end)

local aimbotToggle = aimbotSector.element('Toggle', 'Aimbot', false, function(v)
    if v.Toggle then
        local teamCheck = false
        local fov = 150
        local smoothing = 1

        local RunService = game:GetService("RunService")
        local UserInputService = game:GetService("UserInputService")
        local Players = game:GetService("Players")
        local Camera = workspace.CurrentCamera

        getgenv()._AIMBOT_RUNNING = true

        getgenv().aimbotLoop = RunService.RenderStepped:Connect(function()
            if not getgenv()._AIMBOT_RUNNING then return end

            local pressed = UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2)
            local localPlayer = Players.LocalPlayer
            local character = localPlayer.Character

            if pressed and character then
                local function getClosest(cframe)
                    local ray = Ray.new(cframe.Position, cframe.LookVector).Unit
                    local target, mag = nil, math.huge

                    for _, v in pairs(Players:GetPlayers()) do
                        if v ~= localPlayer and v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") then
                            if not teamCheck or v.Team ~= localPlayer.Team then
                                local magBuf = (v.Character.Head.Position - ray:ClosestPoint(v.Character.Head.Position)).Magnitude
                                if magBuf < mag then
                                    mag = magBuf
                                    target = v
                                end
                            end
                        end
                    end
                    return target
                end

                local curTar = getClosest(Camera.CFrame)
                if curTar then
                    local ssHeadPoint = Camera:WorldToScreenPoint(curTar.Character.Head.Position)
                    local center = Camera.ViewportSize / 2
                    local screenPos = Vector2.new(ssHeadPoint.X, ssHeadPoint.Y)

                    if (screenPos - center).Magnitude < fov then
                        Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position, curTar.Character.Head.Position), smoothing)
                    end
                end
            end
        end)
    else
        getgenv()._AIMBOT_RUNNING = false
        if getgenv().aimbotLoop then
            getgenv().aimbotLoop:Disconnect()
        end
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if not playerTracerEnabled then return end

    local camera = workspace.CurrentCamera
    local localPlayer = game.Players.LocalPlayer
    local center = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)

    for player, line in pairs(tracerLines) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local partPos, visible = camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            if visible then
                line.From = center
                line.To = Vector2.new(partPos.X, partPos.Y)
                line.Color = playerTracerColor
                line.Visible = true
            else
                line.Visible = false
            end
        else
            line.Visible = false
        end
    end
end)

local aimbotToggle = aimbotSector.element('Toggle', 'Target Player', false, function(v)
end)
local aimbotToggle = aimbotSector.element('Toggle', 'Team check', false, function(v)
end)

local flingEnabled = false
local flingSpeed = 50 -- –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

aaSectorBasic.element('Toggle', 'Anti Aim', false, function(v)
    flingEnabled = v.Toggle
end)

aaSectorSettings.element('Slider', 'Fling Spin Speed', {
    default = {min = 10, max = 200, default = flingSpeed}
}, function(v)
    flingSpeed = v.Slider
end)

local player = game.Players.LocalPlayer
local function onCharacterAdded(char)
    local humanoidRootPart = char:WaitForChild("HumanoidRootPart")

    task.spawn(function()
        while char and char.Parent do
            if flingEnabled then
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(0, math.rad(flingSpeed), 0)
            end
            task.wait(0.05)
        end
    end)
end

player.CharacterAdded:Connect(onCharacterAdded)
if player.Character then
    onCharacterAdded(player.Character)
end

local infJumpEnabled = false
local infJumpConnection

aaSectorBasic.element('Toggle', 'Inf Jump', false, function(v)
    infJumpEnabled = v.Toggle

    if infJumpEnabled then
        infJumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
            local player = game.Players.LocalPlayer
            if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    else
        if infJumpConnection then
            infJumpConnection:Disconnect()
            infJumpConnection = nil
        end
    end
end)








local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local mouse = player:GetMouse()
local RunService = game:GetService("RunService")

local gui = Instance.new("ScreenGui")
gui.Name = "CursorCrosshair"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = playerGui
gui.Enabled = false

local lineLength = 18
local lineThickness = 2
local offset = 10

local currentColor = Color3.fromRGB(255, 255, 255)

local crosshair = Instance.new("Frame")
crosshair.Size = UDim2.new(0, 0, 0, 0)
crosshair.AnchorPoint = Vector2.new(0.5, 0.5)
crosshair.Position = UDim2.new(0.5, 0, 0.5, 8)
crosshair.BackgroundTransparency = 1
crosshair.Parent = gui

local dot = Instance.new("Frame")
dot.Size = UDim2.new(0, 3, 0, 3)
dot.Position = UDim2.new(0.5, 0, 0.5, 0)
dot.AnchorPoint = Vector2.new(0.5, 0.5)
dot.BackgroundColor3 = currentColor
dot.BorderSizePixel = 0
dot.Parent = crosshair

local label = Instance.new("TextLabel")
label.Size = UDim2.new(0, 200, 0, 20)
label.Position = UDim2.new(0.5, 0, 0.5, 30)
label.AnchorPoint = Vector2.new(0.5, 0)
label.BackgroundTransparency = 1
label.Text = "ArmoriHub,zyx"
label.Font = Enum.Font.Code
label.TextSize = 18
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.TextStrokeTransparency = 0.2
label.Parent = crosshair

local function createLine(angleDeg)
  local container = Instance.new("Frame")
  container.Size = UDim2.new(0, 0, 0, 0)
  container.Position = UDim2.new(0.5, 0, 0.5, 0)
  container.AnchorPoint = Vector2.new(0.5, 0.5)
  container.BackgroundTransparency = 1
  container.Parent = crosshair

  local line = Instance.new("Frame")
  line.Size = UDim2.new(0, lineThickness, 0, lineLength)
  line.Position = UDim2.new(0.5, 0, 0, -offset)
  line.AnchorPoint = Vector2.new(0.5, 1)
  line.BackgroundColor3 = currentColor
  line.BorderSizePixel = 0
  line.Parent = container

  return container
end

local lines = {
  createLine(0),
  createLine(90),
  createLine(180),
  createLine(270)
}

local function updateCrosshairColor(newColor)
  currentColor = newColor
  dot.BackgroundColor3 = currentColor
  for _, container in ipairs(lines) do
    for _, child in ipairs(container:GetChildren()) do
      if child:IsA("Frame") then
        child.BackgroundColor3 = currentColor
      end
    end
  end
end

local rotation = 0

RunService.RenderStepped:Connect(function(dt)
  if not gui.Enabled then return end

  local mouseX = mouse.X
  local mouseY = mouse.Y
  crosshair.Position = UDim2.new(0, mouseX, 0, mouseY + 60)

  rotation = (rotation + dt * 60) % 360
  for i, container in ipairs(lines) do
    container.Rotation = rotation + ((i - 1) * 90)
  end
end)

local croshairToggle = aaSectorSettings2.element('Toggle', 'Croshair', false, function(v)
  if v.Toggle then
    print("Croshair –≤–∫–ª—é—á–µ–Ω")
    gui.Enabled = true
  else
    print("Croshair –≤—ã–∫–ª—é—á–µ–Ω")
    gui.Enabled = false
  end
end)

croshairToggle:add_color({Color = currentColor}, nil, function(v)
  currentColor = v.Color
  updateCrosshairColor(currentColor)
end)


-- [1] –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º Sky –∏–∑ Lighting
local Lighting = game:GetService("Lighting")
local Socolo = Lighting:FindFirstChildOfClass("Sky")
if not Socolo then
    Socolo = Instance.new("Sky")
    Socolo.Name = "Sky"
    Socolo.Parent = Lighting
end

-- [2] –§–ª–∞–≥–∏
local skyEnabled = false
local currentTheme = "Galaxy"

-- [3] –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–µ–±–∞
local function applySky(theme)
    if not skyEnabled then return end
    print("Applying theme:", theme)

    local function setSky(bk, dn, ft, lf, rt, up)
        Socolo.SkyboxBk = bk
        Socolo.SkyboxDn = dn
        Socolo.SkyboxFt = ft
        Socolo.SkyboxLf = lf
        Socolo.SkyboxRt = rt
        Socolo.SkyboxUp = up
    end

    Socolo.StarCount = 0 -- –°–±—Ä–æ—Å

    if theme == "Sponge Bob" then
        setSky("http://www.roblox.com/asset/?id=7633178166",
               "http://www.roblox.com/asset/?id=7633178166",
               "http://www.roblox.com/asset/?id=7633178166",
               "http://www.roblox.com/asset/?id=7633178166",
               "http://www.roblox.com/asset/?id=7633178166",
               "http://www.roblox.com/asset/?id=7633178166")

    elseif theme == "Vaporwave" then
        setSky("rbxassetid://1417494030",
               "rbxassetid://1417494146",
               "rbxassetid://1417494253",
               "rbxassetid://1417494402",
               "rbxassetid://1417494499",
               "rbxassetid://1417494643")

    elseif theme == "Clouds" then
        setSky("rbxassetid://570557514",
               "rbxassetid://570557775",
               "rbxassetid://570557559",
               "rbxassetid://570557620",
               "rbxassetid://570557672",
               "rbxassetid://570557727")

    elseif theme == "Twilight" then
        setSky("rbxassetid://264908339",
               "rbxassetid://264907909",
               "rbxassetid://264909420",
               "rbxassetid://264909758",
               "rbxassetid://264908886",
               "rbxassetid://264907379")

    elseif theme == "Chill" then
        setSky("rbxassetid://5084575798",
               "rbxassetid://5084575916",
               "rbxassetid://5103949679",
               "rbxassetid://5103948542",
               "rbxassetid://5103948784",
               "rbxassetid://5084576400")

    elseif theme == "Minecraft" then
        setSky("rbxassetid://1876545003",
               "rbxassetid://1876544331",
               "rbxassetid://1876542941",
               "rbxassetid://1876543392",
               "rbxassetid://1876543764",
               "rbxassetid://1876544642")

    elseif theme == "Among Us" then
        setSky("rbxassetid://5752463190",
               "rbxassetid://5872485020",
               "rbxassetid://5752463190",
               "rbxassetid://5752463190",
               "rbxassetid://5752463190",
               "rbxassetid://5752463190")

    elseif theme == "Redshift" then
        setSky("rbxassetid://401664839",
               "rbxassetid://401664862",
               "rbxassetid://401664960",
               "rbxassetid://401664881",
               "rbxassetid://401664901",
               "rbxassetid://401664936")

    elseif theme == "Aesthetic Night" then
        setSky("rbxassetid://1045964490",
               "rbxassetid://1045964368",
               "rbxassetid://1045964655",
               "rbxassetid://1045964655",
               "rbxassetid://1045964655",
               "rbxassetid://1045962969")

    elseif theme == "Neptune" then
        setSky("rbxassetid://218955819",
               "rbxassetid://218953419",
               "rbxassetid://218954524",
               "rbxassetid://218958493",
               "rbxassetid://218957134",
               "rbxassetid://218950090")
        Socolo.StarCount = 5000

    elseif theme == "Galaxy" then
        setSky("http://www.roblox.com/asset/?id=159454299",
               "http://www.roblox.com/asset/?id=159454296",
               "http://www.roblox.com/asset/?id=159454293",
               "http://www.roblox.com/asset/?id=159454286",
               "http://www.roblox.com/asset/?id=159454300",
               "http://www.roblox.com/asset/?id=159454288")
        Socolo.StarCount = 5000
    end
end

-- [4] UI-—Å–æ–∑–¥–∞–Ω–∏–µ (–ø—Ä–∏–º–µ—Ä)
-- –ó–∞–º–µ–Ω–∏—Ç–µ `yourGuiSector` –Ω–∞ –Ω—É–∂–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–µ–∫—Ç–æ—Ä–∞ GUI
local skyToggle = aaSectorSettings2.element('Toggle', 'Enable Skybox', false, function(v)
    skyEnabled = v.Toggle
    if skyEnabled then
        applySky(currentTheme)
    end
end)

local dropdown = aaSectorSettings2.element('Dropdown', 'Skybox Theme', {
    options = {
        'Galaxy',
        'Minecraft',
        'Among Us',
        'Twilight',
        'Sponge Bob',
        'Vaporwave',
        'Clouds',
        'Redshift',
        'Aesthetic Night',
        'Neptune',
        'Chill',
    }
}, function(v)
    currentTheme = v.Dropdown
    applySky(currentTheme)
end)


local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ–ª–∞—è
local flyBodyVelocity, flyBodyGyro
local flyEnabled = false
local speedHackEnabled = false

-- –ù–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏
local speedHackSpeed = 50
local flySpeed = 50

-- –û–±–Ω–æ–≤–ª—è–µ–º character –ø—Ä–∏ —Ä–µ—Å–ø–∞–≤–Ω–µ
player.CharacterAdded:Connect(function(char)
    character = char
end)

-- Toggles –≤ aaSectorBasic (Player —Å–µ–∫—Ü–∏—è)
local speedHackToggle = aaSectorBasic.element('Toggle', 'SpeedHack', false, function(v)
    speedHackEnabled = v.Toggle
    if not speedHackEnabled and character and character:FindFirstChildOfClass("Humanoid") then
        character:FindFirstChildOfClass("Humanoid").WalkSpeed = 16 -- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
    end
end)

local flyToggle = aaSectorBasic.element('Toggle', 'Fly', false, function(v)
    flyEnabled = v.Toggle
    if flyEnabled then
        if character and character:FindFirstChild("HumanoidRootPart") then
            local hrp = character.HumanoidRootPart

            flyBodyVelocity = Instance.new("BodyVelocity")
            flyBodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
            flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
            flyBodyVelocity.Parent = hrp

            flyBodyGyro = Instance.new("BodyGyro")
            flyBodyGyro.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
            flyBodyGyro.CFrame = hrp.CFrame
            flyBodyGyro.Parent = hrp

            -- –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ—Ç–æ–º
            coroutine.wrap(function()
                local UIS = game:GetService("UserInputService")
                while flyEnabled and flyBodyVelocity and flyBodyGyro and character and character:FindFirstChild("HumanoidRootPart") do
                    local velocity = Vector3.new(0, 0, 0)
                    if UIS:IsKeyDown(Enum.KeyCode.W) then
                        velocity = velocity + (workspace.CurrentCamera.CFrame.LookVector * flySpeed)
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.S) then
                        velocity = velocity - (workspace.CurrentCamera.CFrame.LookVector * flySpeed)
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.A) then
                        velocity = velocity - (workspace.CurrentCamera.CFrame.RightVector * flySpeed)
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.D) then
                        velocity = velocity + (workspace.CurrentCamera.CFrame.RightVector * flySpeed)
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.Space) then
                        velocity = velocity + Vector3.new(0, flySpeed, 0)
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
                        velocity = velocity - Vector3.new(0, flySpeed, 0)
                    end

                    flyBodyVelocity.Velocity = velocity
                    flyBodyGyro.CFrame = workspace.CurrentCamera.CFrame
                    wait()
                end
            end)()
        end
    else
        if flyBodyVelocity then
            flyBodyVelocity:Destroy()
            flyBodyVelocity = nil
        end
        if flyBodyGyro then
            flyBodyGyro:Destroy()
            flyBodyGyro = nil
        end
    end
end)

-- –°–ª–∞–π–¥–µ—Ä—ã –≤ aaSectorSettings (Settings —Å–µ–∫—Ü–∏—è)
local speedHackSpeedSlider = aaSectorSettings.element('Slider', 'SpeedHack Speed', {default = {min = 16, max = 200, default = 50}}, function(v)
    speedHackSpeed = v.Slider
    if speedHackEnabled and character and character:FindFirstChildOfClass("Humanoid") then
        character:FindFirstChildOfClass("Humanoid").WalkSpeed = speedHackSpeed
    end
end)

local flySpeedSlider = aaSectorSettings.element('Slider', 'Fly Speed', {default = {min = 10, max = 200, default = 50}}, function(v)
    flySpeed = v.Slider
end)

-- –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ SpeedHack, –µ—Å–ª–∏ —Å–ª–∞–π–¥–µ—Ä —É–∂–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
game:GetService("RunService").RenderStepped:Connect(function()
    if speedHackEnabled and character and character:FindFirstChildOfClass("Humanoid") then
        character:FindFirstChildOfClass("Humanoid").WalkSpeed = speedHackSpeed
    end
end)




local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local camera = workspace.CurrentCamera
local defaultFOV = 70
camera.FieldOfView = defaultFOV

local function stretch4by3()
    local viewport = camera.ViewportSize
    local aspectRatio = viewport.X / viewport.Y
    local targetAspectRatio = 4/3

    if math.abs(aspectRatio - targetAspectRatio) < 0.01 then
        camera.FieldOfView = defaultFOV
        return
    end

    local stretchFactor = aspectRatio / targetAspectRatio
    camera.FieldOfView = defaultFOV * stretchFactor
end

local is4by3Enabled = false
local connection

local function toggleEffect(state)
    is4by3Enabled = state
    if is4by3Enabled then
        stretch4by3()
        connection = RunService.RenderStepped:Connect(stretch4by3)
    else
        camera.FieldOfView = defaultFOV
        if connection then
            connection:Disconnect()
            connection = nil
        end
    end
end

local flyToggle = aaSectorBasic.element('Toggle', '4:3', false, function(v)
    toggleEffect(v.Toggle)
end)

-- –ë–∏–Ω–¥ –∫–ª–∞–≤–∏—à–∏ Z –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Z then
        toggleEffect(not is4by3Enabled)
        flyToggle:SetValue(is4by3Enabled) -- –æ–±–Ω–æ–≤–ª—è–µ–º UI —Ç—É–º–±–ª–µ—Ä
    end
end)


    local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- –¢–∞–±–ª–∏—Ü–∞ –∑–≤—É–∫–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
local hitSounds = {
    ["Rust"] = "rbxassetid://1255040462",
    ["CS:GO"] = "rbxassetid://6937353691",
    ["TF2 Critical"] = "rbxassetid://296102734",
    ["Call of Duty"] = "rbxassetid://5952120301",
    ["Gamesense"] = "rbxassetid://4817809188",
    ["Among Us"] = "rbxassetid://5700183626",
    ["Minecraft"] = "rbxassetid://4018616850",
    ["Mario"] = "rbxassetid://2815207981",
    ["Steve"] = "rbxassetid://4965083997",
    ["Bamboo"] = "rbxassetid://3769434519",
    ["TF2"] = "rbxassetid://2868331684",
}

local soundEnabled = false
local selectedSound = "Rust"

local function playHitSound()
    if not soundEnabled then return end
    local soundId = hitSounds[selectedSound]
    if not soundId then return end

    local sound = Instance.new("Sound")
    sound.SoundId = soundId
    sound.Volume = 3
    sound.PlaybackSpeed = 1.2
    sound.Parent = workspace
    sound:Play()
    Debris:AddItem(sound, sound.TimeLength + 1)
end

-- –£–±–∏—Ä–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é ‚Äî –∑–≤—É–∫ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ–≥–¥–∞ –ø—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –≤ –∏–≥—Ä–æ–∫–∞
mouse.Button1Down:Connect(function()
    local character = player.Character
    if not character then return end

    local head = character:FindFirstChild("Head")
    if not head then return end

    local origin = head.Position
    local direction = (mouse.Hit.Position - origin).Unit * 10000 -- –û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –ª—É—á, —á—Ç–æ–±—ã –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å –¥–∞–ª—å–Ω–æ—Å—Ç—å

    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

    local result = workspace:Raycast(origin, direction, raycastParams)

    if result and result.Instance then
        local hitPart = result.Instance
        local hitModel = hitPart:FindFirstAncestorOfClass("Model")

        if hitModel and hitModel:FindFirstChild("Humanoid") and hitModel ~= character then
            print("–ü–æ–ø–∞–¥–∞–Ω–∏–µ –≤: " .. hitModel.Name)
            playHitSound()
        end
    end
end)

-- UI ‚Äî –≤—Å—Ç–∞–≤–∏—Ç—å –≤ —Ç–≤–æ–π aaSectorSettings2
local toggleHitSound = aaSectorSettings2.element('Toggle', 'Enable Hit Sound', false, function(v)
    soundEnabled = v.Toggle
end)

local dropdownHitSound = aaSectorSettings2.element('Dropdown', 'Select Hit Sound', {
    options = (function()
        local list = {}
        for name in pairs(hitSounds) do
            table.insert(list, name)
        end
        return list
    end)()
}, function(v)
    selectedSound = v.Dropdown
end)



local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local function waitCharacter()
    repeat task.wait() until character:FindFirstChild("LeftHand") and character:FindFirstChild("RightUpperArm")
end
waitCharacter()

-- –£–¥–∞–ª–µ–Ω–∏–µ Shirt
local shirt = character:FindFirstChildOfClass("Shirt")
if shirt then shirt:Destroy() end

-- –ß–∞—Å—Ç–∏ —Ä—É–∫
local partsToColor = {
    "LeftHand", "LeftLowerArm", "LeftUpperArm",
    "RightHand", "RightLowerArm", "RightUpperArm"
}

-- –≠—Ñ—Ñ–µ–∫—Ç—ã
local effects = {
    ["Neon White"] = {
        Material = Enum.Material.Neon,
        Transparency = 0,
        TextureId = "rbxassetid://1464411011"
    },
    ["SemiTransparent"] = {
        Material = Enum.Material.Plastic,
        Transparency = 0.5,
        TextureId = "rbxassetid://1464411011"
    }
}

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local effectEnabled = false
local currentEffectName = "Neon White"
local customColor = Color3.new(1, 1, 1) -- –±–µ–ª—ã–π

local function clearTextures(part)
    for _, c in ipairs(part:GetChildren()) do
        if c:IsA("Texture") or c:IsA("Decal") then
            c:Destroy()
        end
    end
end

local function applyEffectToPart(part, effect)
    if not part or not part:IsA("BasePart") then return end
    clearTextures(part)
    part.BrickColor = BrickColor.new(customColor)
    part.Material = effect.Material
    part.Transparency = effect.Transparency
    if effect.TextureId then
        local tex = Instance.new("Texture")
        tex.Texture = effect.TextureId
        tex.Face = Enum.NormalId.Front
        tex.Transparency = 0
        tex.Parent = part
    end
end

local function isToolEquipped()
    return character:FindFirstChildOfClass("Tool") ~= nil
end

local function updateArms()
    local active = effectEnabled or isToolEquipped()
    for _, name in ipairs(partsToColor) do
        local part = character:FindFirstChild(name)
        if part then
            if active and currentEffectName ~= "None" then
                applyEffectToPart(part, effects[currentEffectName])
            else
                clearTextures(part)
                part.BrickColor = BrickColor.new("Medium stone grey")
                part.Material = Enum.Material.Plastic
                part.Transparency = 0
            end
        end
    end
end

-- üß© UI —ç–ª–µ–º–µ–Ω—Ç—ã
local toggleEffect = aaSectorSettings2.element('Toggle', 'Toggle Arms Effect', false, function(val)
    effectEnabled = val
    updateArms()
end)

-- üé® –ü–∞–ª–∏—Ç—Ä–∞ ‚Äî —á–µ—Ä–µ–∑ add_color –∫–∞–∫ —Ç—ã –ø—Ä–æ—Å–∏–ª
toggleEffect:add_color({Color = customColor}, nil, function(v)
    customColor = v.Color
    if effectEnabled then
        updateArms()
    end
end)

-- üß™ Dropdown –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç—Ñ—Ñ–µ–∫—Ç–∞
aaSectorSettings2.element('Dropdown', 'Choose Effect', {
    options = {"None", "Neon White", "SemiTransparent"}
}, function(sel)
    currentEffectName = sel.Dropdown
    updateArms()
end)

-- –ü–µ—Ä–µ—Ö–≤–∞—Ç —Ä–µ—Å–ø–∞–≤–Ω–∞ –∏ –æ—Ä—É–∂–∏—è
player.CharacterAdded:Connect(function(char)
    character = char
    waitCharacter()
    local s = character:FindFirstChildOfClass("Shirt")
    if s then s:Destroy() end
    updateArms()
end)

character.ChildAdded:Connect(updateArms)
character.ChildRemoved:Connect(updateArms)

updateArms()
